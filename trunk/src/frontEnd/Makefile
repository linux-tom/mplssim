#############################################################################
# Makefile for building: mpls-sim
# Generated by qmake (2.01a) (Qt 4.7.2) on: Tue May 8 06:43:09 2012
# Project:  mpls-sim.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile mpls-sim.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -Igui -Iclient -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		client/ClientSocket.cpp \
		client/Socket.cpp \
		gui/add_ftn.cpp \
		gui/add_ftn2.cpp \
		gui/add_ilm.cpp \
		gui/client_app.cpp \
		gui/connLine.cpp \
		gui/editServerApp.cpp \
		gui/linkFail.cpp \
		gui/linkParam.cpp \
		gui/lsp_buttons.cpp \
		gui/lsrdatabase.cpp \
		gui/main_window.cpp \
		gui/mplsPacket.cpp \
		gui/nodeCreator.cpp \
		gui/nodeIcon.cpp \
		gui/packetRectangle.cpp \
		gui/parseMpls.cpp \
		gui/server_app.cpp \
		gui/showClientApps.cpp \
		gui/showGraphs.cpp \
		gui/showServerApps.cpp \
		gui/sim_results.cpp \
		gui/simRun.cpp \
		gui/superThreader.cpp \
		gui/threadedParser.cpp \
		gui/topology.cpp moc_add_ftn.cpp \
		moc_add_ftn2.cpp \
		moc_add_ilm.cpp \
		moc_client_app.cpp \
		moc_editServerApp.cpp \
		moc_linkFail.cpp \
		moc_linkParam.cpp \
		moc_lsp_buttons.cpp \
		moc_lsrdatabase.cpp \
		moc_main_window.cpp \
		moc_mplsPacket.cpp \
		moc_nodeIcon.cpp \
		moc_packetRectangle.cpp \
		moc_server_app.cpp \
		moc_showClientApps.cpp \
		moc_showGraphs.cpp \
		moc_showServerApps.cpp \
		moc_topology.cpp \
		qrc_icons.cpp
OBJECTS       = main.o \
		ClientSocket.o \
		Socket.o \
		add_ftn.o \
		add_ftn2.o \
		add_ilm.o \
		client_app.o \
		connLine.o \
		editServerApp.o \
		linkFail.o \
		linkParam.o \
		lsp_buttons.o \
		lsrdatabase.o \
		main_window.o \
		mplsPacket.o \
		nodeCreator.o \
		nodeIcon.o \
		packetRectangle.o \
		parseMpls.o \
		server_app.o \
		showClientApps.o \
		showGraphs.o \
		showServerApps.o \
		sim_results.o \
		simRun.o \
		superThreader.o \
		threadedParser.o \
		topology.o \
		moc_add_ftn.o \
		moc_add_ftn2.o \
		moc_add_ilm.o \
		moc_client_app.o \
		moc_editServerApp.o \
		moc_linkFail.o \
		moc_linkParam.o \
		moc_lsp_buttons.o \
		moc_lsrdatabase.o \
		moc_main_window.o \
		moc_mplsPacket.o \
		moc_nodeIcon.o \
		moc_packetRectangle.o \
		moc_server_app.o \
		moc_showClientApps.o \
		moc_showGraphs.o \
		moc_showServerApps.o \
		moc_topology.o \
		qrc_icons.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		mpls-sim.pro
QMAKE_TARGET  = mpls-sim
DESTDIR       = 
TARGET        = mpls-sim

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: mpls-sim.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -o Makefile mpls-sim.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile mpls-sim.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/mpls-sim1.0.0 || $(MKDIR) .tmp/mpls-sim1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/mpls-sim1.0.0/ && $(COPY_FILE) --parents client/ClientSocket.h client/Socket.h client/SocketException.h gui/add_ftn.h gui/add_ftn2.h gui/add_ilm.h gui/client_app.h gui/connLine.h gui/connLines.h gui/editServerApp.h gui/gnuplot.h gui/linkFail.h gui/linkParam.h gui/lsp_buttons.h gui/lsrdatabase.h gui/main_window.h gui/mplsNode.h gui/mplsPacket.h gui/nodeCreator.h gui/nodeIcon.h gui/packetRectangle.h gui/parseMpls.h gui/server_app.h gui/showClientApps.h gui/showGraphs.h gui/showServerApps.h gui/sim_results.h gui/simRun.h gui/superThreader.h gui/threadedParser.h gui/threader.h gui/topology.h .tmp/mpls-sim1.0.0/ && $(COPY_FILE) --parents gui/icons.qrc .tmp/mpls-sim1.0.0/ && $(COPY_FILE) --parents main.cpp client/ClientSocket.cpp client/Socket.cpp gui/add_ftn.cpp gui/add_ftn2.cpp gui/add_ilm.cpp gui/client_app.cpp gui/connLine.cpp gui/editServerApp.cpp gui/linkFail.cpp gui/linkParam.cpp gui/lsp_buttons.cpp gui/lsrdatabase.cpp gui/main_window.cpp gui/mplsPacket.cpp gui/nodeCreator.cpp gui/nodeIcon.cpp gui/packetRectangle.cpp gui/parseMpls.cpp gui/server_app.cpp gui/showClientApps.cpp gui/showGraphs.cpp gui/showServerApps.cpp gui/sim_results.cpp gui/simRun.cpp gui/superThreader.cpp gui/threadedParser.cpp gui/topology.cpp .tmp/mpls-sim1.0.0/ && (cd `dirname .tmp/mpls-sim1.0.0` && $(TAR) mpls-sim1.0.0.tar mpls-sim1.0.0 && $(COMPRESS) mpls-sim1.0.0.tar) && $(MOVE) `dirname .tmp/mpls-sim1.0.0`/mpls-sim1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/mpls-sim1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_add_ftn.cpp moc_add_ftn2.cpp moc_add_ilm.cpp moc_client_app.cpp moc_editServerApp.cpp moc_linkFail.cpp moc_linkParam.cpp moc_lsp_buttons.cpp moc_lsrdatabase.cpp moc_main_window.cpp moc_mplsPacket.cpp moc_nodeIcon.cpp moc_packetRectangle.cpp moc_server_app.cpp moc_showClientApps.cpp moc_showGraphs.cpp moc_showServerApps.cpp moc_topology.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_add_ftn.cpp moc_add_ftn2.cpp moc_add_ilm.cpp moc_client_app.cpp moc_editServerApp.cpp moc_linkFail.cpp moc_linkParam.cpp moc_lsp_buttons.cpp moc_lsrdatabase.cpp moc_main_window.cpp moc_mplsPacket.cpp moc_nodeIcon.cpp moc_packetRectangle.cpp moc_server_app.cpp moc_showClientApps.cpp moc_showGraphs.cpp moc_showServerApps.cpp moc_topology.cpp
moc_add_ftn.cpp: gui/add_ftn.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gui/add_ftn.h -o moc_add_ftn.cpp

moc_add_ftn2.cpp: gui/add_ftn2.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gui/add_ftn2.h -o moc_add_ftn2.cpp

moc_add_ilm.cpp: gui/add_ilm.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gui/add_ilm.h -o moc_add_ilm.cpp

moc_client_app.cpp: gui/client_app.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gui/client_app.h -o moc_client_app.cpp

moc_editServerApp.cpp: gui/topology.h \
		gui/nodeIcon.h \
		gui/connLine.h \
		client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h \
		gui/nodeCreator.h \
		gui/editServerApp.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gui/editServerApp.h -o moc_editServerApp.cpp

moc_linkFail.cpp: gui/linkFail.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gui/linkFail.h -o moc_linkFail.cpp

moc_linkParam.cpp: gui/linkParam.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gui/linkParam.h -o moc_linkParam.cpp

moc_lsp_buttons.cpp: gui/lsp_buttons.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gui/lsp_buttons.h -o moc_lsp_buttons.cpp

moc_lsrdatabase.cpp: gui/topology.h \
		gui/nodeIcon.h \
		gui/connLine.h \
		client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h \
		gui/nodeCreator.h \
		gui/lsrdatabase.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gui/lsrdatabase.h -o moc_lsrdatabase.cpp

moc_main_window.cpp: gui/topology.h \
		gui/nodeIcon.h \
		gui/connLine.h \
		client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h \
		gui/nodeCreator.h \
		gui/main_window.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gui/main_window.h -o moc_main_window.cpp

moc_mplsPacket.cpp: gui/topology.h \
		gui/nodeIcon.h \
		gui/connLine.h \
		client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h \
		gui/nodeCreator.h \
		gui/mplsPacket.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gui/mplsPacket.h -o moc_mplsPacket.cpp

moc_nodeIcon.cpp: gui/topology.h \
		gui/nodeIcon.h \
		gui/connLine.h \
		client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h \
		gui/nodeCreator.h \
		gui/nodeIcon.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gui/nodeIcon.h -o moc_nodeIcon.cpp

moc_packetRectangle.cpp: gui/topology.h \
		gui/nodeIcon.h \
		gui/connLine.h \
		client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h \
		gui/nodeCreator.h \
		gui/packetRectangle.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gui/packetRectangle.h -o moc_packetRectangle.cpp

moc_server_app.cpp: gui/server_app.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gui/server_app.h -o moc_server_app.cpp

moc_showClientApps.cpp: gui/topology.h \
		gui/nodeIcon.h \
		gui/connLine.h \
		client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h \
		gui/nodeCreator.h \
		gui/showClientApps.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gui/showClientApps.h -o moc_showClientApps.cpp

moc_showGraphs.cpp: gui/topology.h \
		gui/nodeIcon.h \
		gui/connLine.h \
		client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h \
		gui/nodeCreator.h \
		gui/showGraphs.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gui/showGraphs.h -o moc_showGraphs.cpp

moc_showServerApps.cpp: gui/topology.h \
		gui/nodeIcon.h \
		gui/connLine.h \
		client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h \
		gui/nodeCreator.h \
		gui/showServerApps.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gui/showServerApps.h -o moc_showServerApps.cpp

moc_topology.cpp: gui/nodeIcon.h \
		gui/topology.h \
		gui/connLine.h \
		client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h \
		gui/nodeCreator.h \
		gui/topology.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gui/topology.h -o moc_topology.cpp

compiler_rcc_make_all: qrc_icons.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_icons.cpp
qrc_icons.cpp: gui/icons.qrc \
		gui/icons/server.png \
		gui/icons/switch.png \
		gui/icons/lsr.png \
		gui/icons/ip.png \
		gui/icons/client.png \
		gui/icons/del.png
	/usr/bin/rcc -name icons gui/icons.qrc -o qrc_icons.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean 

####### Compile

main.o: main.cpp gui/main_window.h \
		gui/topology.h \
		gui/nodeIcon.h \
		gui/connLine.h \
		client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h \
		gui/nodeCreator.h \
		gui/threadedParser.h \
		gui/threader.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

ClientSocket.o: client/ClientSocket.cpp client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ClientSocket.o client/ClientSocket.cpp

Socket.o: client/Socket.cpp client/Socket.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Socket.o client/Socket.cpp

add_ftn.o: gui/add_ftn.cpp gui/add_ftn.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o add_ftn.o gui/add_ftn.cpp

add_ftn2.o: gui/add_ftn2.cpp gui/add_ftn2.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o add_ftn2.o gui/add_ftn2.cpp

add_ilm.o: gui/add_ilm.cpp gui/add_ilm.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o add_ilm.o gui/add_ilm.cpp

client_app.o: gui/client_app.cpp gui/client_app.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o client_app.o gui/client_app.cpp

connLine.o: gui/connLine.cpp gui/connLine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o connLine.o gui/connLine.cpp

editServerApp.o: gui/editServerApp.cpp gui/editServerApp.h \
		gui/topology.h \
		gui/nodeIcon.h \
		gui/connLine.h \
		client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h \
		gui/nodeCreator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o editServerApp.o gui/editServerApp.cpp

linkFail.o: gui/linkFail.cpp gui/linkFail.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o linkFail.o gui/linkFail.cpp

linkParam.o: gui/linkParam.cpp gui/linkParam.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o linkParam.o gui/linkParam.cpp

lsp_buttons.o: gui/lsp_buttons.cpp gui/lsp_buttons.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o lsp_buttons.o gui/lsp_buttons.cpp

lsrdatabase.o: gui/lsrdatabase.cpp gui/lsrdatabase.h \
		gui/topology.h \
		gui/nodeIcon.h \
		gui/connLine.h \
		client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h \
		gui/nodeCreator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o lsrdatabase.o gui/lsrdatabase.cpp

main_window.o: gui/main_window.cpp gui/main_window.h \
		gui/topology.h \
		gui/nodeIcon.h \
		gui/connLine.h \
		client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h \
		gui/nodeCreator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main_window.o gui/main_window.cpp

mplsPacket.o: gui/mplsPacket.cpp gui/mplsPacket.h \
		gui/topology.h \
		gui/nodeIcon.h \
		gui/connLine.h \
		client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h \
		gui/nodeCreator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mplsPacket.o gui/mplsPacket.cpp

nodeCreator.o: gui/nodeCreator.cpp gui/nodeCreator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o nodeCreator.o gui/nodeCreator.cpp

nodeIcon.o: gui/nodeIcon.cpp gui/nodeIcon.h \
		gui/topology.h \
		gui/connLine.h \
		client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h \
		gui/nodeCreator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o nodeIcon.o gui/nodeIcon.cpp

packetRectangle.o: gui/packetRectangle.cpp gui/packetRectangle.h \
		gui/topology.h \
		gui/nodeIcon.h \
		gui/connLine.h \
		client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h \
		gui/nodeCreator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o packetRectangle.o gui/packetRectangle.cpp

parseMpls.o: gui/parseMpls.cpp gui/parseMpls.h \
		gui/mplsPacket.h \
		gui/topology.h \
		gui/nodeIcon.h \
		gui/connLine.h \
		client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h \
		gui/nodeCreator.h \
		gui/threader.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o parseMpls.o gui/parseMpls.cpp

server_app.o: gui/server_app.cpp gui/server_app.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o server_app.o gui/server_app.cpp

showClientApps.o: gui/showClientApps.cpp gui/showClientApps.h \
		gui/topology.h \
		gui/nodeIcon.h \
		gui/connLine.h \
		client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h \
		gui/nodeCreator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o showClientApps.o gui/showClientApps.cpp

showGraphs.o: gui/showGraphs.cpp gui/showGraphs.h \
		gui/topology.h \
		gui/nodeIcon.h \
		gui/connLine.h \
		client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h \
		gui/nodeCreator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o showGraphs.o gui/showGraphs.cpp

showServerApps.o: gui/showServerApps.cpp gui/showServerApps.h \
		gui/topology.h \
		gui/nodeIcon.h \
		gui/connLine.h \
		client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h \
		gui/nodeCreator.h \
		gui/editServerApp.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o showServerApps.o gui/showServerApps.cpp

sim_results.o: gui/sim_results.cpp gui/sim_results.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sim_results.o gui/sim_results.cpp

simRun.o: gui/simRun.cpp gui/simRun.h \
		gui/threader.h \
		gui/topology.h \
		gui/nodeIcon.h \
		gui/connLine.h \
		client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h \
		gui/nodeCreator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o simRun.o gui/simRun.cpp

superThreader.o: gui/superThreader.cpp gui/superThreader.h \
		gui/threader.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o superThreader.o gui/superThreader.cpp

threadedParser.o: gui/threadedParser.cpp gui/threadedParser.h \
		gui/topology.h \
		gui/nodeIcon.h \
		gui/connLine.h \
		client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h \
		gui/nodeCreator.h \
		gui/threader.h \
		gui/gnuplot.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o threadedParser.o gui/threadedParser.cpp

topology.o: gui/topology.cpp gui/topology.h \
		gui/nodeIcon.h \
		gui/connLine.h \
		client/ClientSocket.h \
		client/Socket.h \
		client/SocketException.h \
		gui/nodeCreator.h \
		gui/main_window.h \
		gui/add_ilm.h \
		gui/add_ftn.h \
		gui/client_app.h \
		gui/server_app.h \
		gui/linkParam.h \
		gui/linkFail.h \
		gui/superThreader.h \
		gui/threader.h \
		gui/lsrdatabase.h \
		gui/simRun.h \
		gui/showGraphs.h \
		gui/showClientApps.h \
		gui/showServerApps.h \
		gui/lsp_buttons.h \
		gui/threadedParser.h \
		gui/packetRectangle.h \
		gui/parseMpls.h \
		gui/mplsPacket.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o topology.o gui/topology.cpp

moc_add_ftn.o: moc_add_ftn.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_add_ftn.o moc_add_ftn.cpp

moc_add_ftn2.o: moc_add_ftn2.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_add_ftn2.o moc_add_ftn2.cpp

moc_add_ilm.o: moc_add_ilm.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_add_ilm.o moc_add_ilm.cpp

moc_client_app.o: moc_client_app.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_client_app.o moc_client_app.cpp

moc_editServerApp.o: moc_editServerApp.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_editServerApp.o moc_editServerApp.cpp

moc_linkFail.o: moc_linkFail.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_linkFail.o moc_linkFail.cpp

moc_linkParam.o: moc_linkParam.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_linkParam.o moc_linkParam.cpp

moc_lsp_buttons.o: moc_lsp_buttons.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_lsp_buttons.o moc_lsp_buttons.cpp

moc_lsrdatabase.o: moc_lsrdatabase.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_lsrdatabase.o moc_lsrdatabase.cpp

moc_main_window.o: moc_main_window.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_main_window.o moc_main_window.cpp

moc_mplsPacket.o: moc_mplsPacket.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mplsPacket.o moc_mplsPacket.cpp

moc_nodeIcon.o: moc_nodeIcon.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_nodeIcon.o moc_nodeIcon.cpp

moc_packetRectangle.o: moc_packetRectangle.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_packetRectangle.o moc_packetRectangle.cpp

moc_server_app.o: moc_server_app.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_server_app.o moc_server_app.cpp

moc_showClientApps.o: moc_showClientApps.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_showClientApps.o moc_showClientApps.cpp

moc_showGraphs.o: moc_showGraphs.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_showGraphs.o moc_showGraphs.cpp

moc_showServerApps.o: moc_showServerApps.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_showServerApps.o moc_showServerApps.cpp

moc_topology.o: moc_topology.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_topology.o moc_topology.cpp

qrc_icons.o: qrc_icons.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_icons.o qrc_icons.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

